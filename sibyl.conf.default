################################################################################
#
# Lines starting with "#" or ";" are comments. You can also add in-line comments
# using " ;" after an option.
#
# Options are specified one per line with "opt = value".
#
# If an option isn't recognized, it will be ignored. You can use these as
# custom variables to make some defintions easier. For example:
#
#     users = alice,bob
#     cmds = play,pause
#     bw_list = b %(users)s *; w %(users)s %(cmds)s
#
# The value for an option can span multiple lines.
#
# Unknown options will appear as INFO in the log, and invalid values as WARN. If
# something isn't working as expected, check the log for "config" entries.
#
# Relative paths are relative to the location of "run.py"
#
# For full specifications read the python docs on SafeConfigParser:
#     https://docs.python.org/2/library/configparser.html
#
################################################################################

# [REQUIRED] Comma-separated list of protocols to use
protocols = cli

# Chat rooms to join on bot startup
# Format for single entry: proto,room,nick,pass
# Can also be: proto,room OR proto,room,nick OR proto,room,,pass
# Multiple rooms separated by ";" e.g.: proto,room,nick,pass; proto,room,nick
#rooms =

# Default nick to use in rooms
#nick_name = Sibyl

# Character sequence used to give the bot a command in a MUC. Default is None.
# Example: "!hello" instead of "Sibyl hello"
#cmd_prefix =

# Black and white list to allow/forbid users from running certain commands
# Format is: w * *; b user cmd; w user1,user2 cmd1,cmd2
# more details: https://github.com/TheSchwa/sibyl/wiki/BW-List
#bw_list = w * *

# Enable dangerous commands (e.g. die, reboot, config)
#chat_ctrl = False

# Enable/Disable plugins (you should only use one of the below not both)
# To use all plugins but a few, use the "disable" option
# To only use a list of specified plugins, use the "enable" option
#disable =
#enable = bookmark,general,library,note,room,xbmc

# If True, upon joining a room during bot startup, send a message listing errors
#tell_errors = True

################################################################################
# Socket options
################################################################################

# Default port (note that on linux only root can use ports below 1024)
#socket.port = 8767

################################################################################
# XMPP options
################################################################################

# Login info
#xmpp.jid = 
#xmpp.password = 

# XMPP resource; default is the class name of the bot.
#xmpp.resource = SibylBot

# Server to connect to if different than in the JID given in "username"
#xmpp.server = 

# Port to connect to the XMPP server.
#xmpp.port = 5222

# Only accept subscriptions from the specified domain; can be either "True" to
# use the domain specified by "username", a string specifying a domain, or
# "False" to accept all subscribe requests.
#xmpp.priv_domain = True

# Interval (seconds) to ping the server to check for disconnect. 0 means never
#xmpp.ping_freq = 60

# Timeout for pings. Only matters if "ping_freq" is greater than 0
#xmpp.ping_timeout = 3

# Print XMPPPY stanza debug info to the terminal
#xmpp.debug = False

################################################################################
# Matrix options
################################################################################

# username, password, homeserver
#matrix.username = 
#matrix.password = 
#matrix.homeserver = 

################################################################################
# plugin options
################################################################################

# File in which to store bookmarks; format is tab-delineated text file
#bookmark.file = data/sibyl_bm.txt

# When resuming a playlist, whether to always start with the next item rather
# than the bookmarked file itself
#bookmark.resume_next = False

# File in which to store library contents; format is python pickle
#library.file = data/sibyl_lib.pickle

# Maximum number of matches to reply with in chat when searching the library.
# A value of 0 means no limit. Note that some servers will kick the bot for
# sending very long replies.
#library.max_matches = 10

# Directories to search for audio and video files to add to the library.
# Format for regular directories: /path/to/dir1; /path/to/dir2
# Format for samba shares: server1,share1; server2,share2,username,password
# Default for both options is None.
#library.audio_dirs =
#library.video_dirs =

# File in which to store notes; format is tab-delineated text file
#note.file = data/sibyl_note.txt

# Whether to respond to links with the page title
#room.link_echo = False

# IP address where the XBMC/Kodi/OSMC/etc. web interface is running
# Format is IP:PORT or just IP (port defaults to 80 if not specified)
# The default assumes XBMC is running on the same host as Sibyl
#xbmc.ip = 127.0.0.1:8080

# Username and password to use to access the web interface; default is None
#xbmc.username =
#xbmc.password =

################################################################################
# Advanced options
################################################################################

# Log level can be: critical, error, warning, info, debug
#log_level = info

# File used for logging
#log_file = data/sibyl.log

# Log messages from other python modules
#log_requests = False
#log_urllib3 = False

# If False overwrite the log file on bot init, if True append to the log file
#log_append = True

# Directory to search for plugins; note the default uses relative paths
#cmd_dir = cmds

# Action to take when a chat command encounters an error
# If False, return a generic error msg; if True, return the exception name
#except_reply = False

# Require commands in a chat room to start with nick_name or cmd_prefix
#only_direct = True

# Number of seconds to wait before trying to reconnect
#recon_wait = 60

# Whether to include the name of plugins in the "help" list
#help_plugin = False

# Catch ALL exceptions and log them without killing the bot. Should only be set
# to "False" for debugging purposes.
#catch_except = True

# If True, kill stdout to disable libraries from printing to the console
# NOTE: the stdin protocol will work regardless of this setting
#kill_stdout = True

# Ignore bw_list and allow every command for these protocols (comma-separated)
#admin_protos = stdin
