( - ) low priority, ( + ) normal priority, ( ! ) high priority, ( x ) done
(jah) actively assigned to jah, (jef) actively assigned to jef

OVERHAUL:

  (jah) abstract out chat protocol
        (jah) define API for chat plugins
        (jah) write skeleton chat plugin example file
        (jah) refactor sibylbot and jabberbot (make jabberbot a chat plug-in)
        (jah) plug-in framework for chat (including config option)
        (jah) add config option
        (jah) add docs page about chat plug-in API

  (jef) write matrix plug-in
        (jef) work with @jah on above
        (jef) write and test plug-in
        (jef) write wiki page

  ( + ) finish cmds plug-in framework
        ( + ) implement dependency checking
        ( + ) add config options to disable plug-ins

  ( ! ) finish redo-ing docs to reflect plug-ins changes
        ( ! ) home page
        ( ! ) config
        ( x ) b/w list
        ( x ) writing plug-ins intro
        ( + ) writing plug-in example (alarm)
        ( + ) add dependencies info to plug-in pages
        ( x ) bookmark.py
        ( ! ) general.py
        ( x ) library.py
        ( ! ) muc.py
        ( ! ) note.py
        ( ! ) xbmc.py

  ( + ) add extended help text to all commands accessible via "help" cmd

  ( - ) review logging
        ( - ) audit existing levels
        ( - ) add lots of debug info to all commands
        ( - ) remove/control "requests" library logging

  ( - ) figure out if unicode is broken anywhere (xmpppy returns unicode msgs)

  ( + ) review and add comments to everything

GENERAL:

  ( + ) add chat_ctrl option to config framework
        ( + ) additional parameter to @botconf dictionaries
        ( + ) auto-gen bw/list black entry for chat_ctrl cmds

COMMANDS:

  ( - ) add ping command
  ( + ) add isup command
  ( - ) add remind command (send msg highlighting user at specified time)
  ( + ) add tell command (send msg when specified user joins room)
  ( - ) add stalk command (send msg when specified user changes to avilable)

MAYBE:

  ( - ) switch from real JID dict to on execute requests
  ( - ) allow user to set requests timeout (currently 60s)
  ( - ) read and search media tags (e.g. title, album, artist from mp3)
  ( - ) allow searching xbmc library
  ( - ) daemonize inside python
